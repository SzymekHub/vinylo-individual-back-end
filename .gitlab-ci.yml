# Disable the Gradle daemon for Continuous Integration servers as correctness
# is usually a priority over speed in CI environments. Using a fresh
# runtime for each build is more reliable since the runtime is completely
# isolated from any previous builds.
variables:
  # This sets a Gradle option to disable the Gradle daemon.
  # The Gradle daemon improves build speed by keeping the JVM alive between builds,
  # but it can cause issues in CI environments where isolated, clean builds are preferred.
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  SPRING_PROFILES_ACTIVE: "test"

# Default settings for the entire pipeline.
default:
  # This specifies the Docker image to be used in the pipeline.
  # The image is a Gradle image version 8.10.1 with JDK 17, providing the necessary
  # environment to run Gradle tasks like build and test.
  image: gradle:8.10.1-jdk17

# Define the different stages of the CI/CD pipeline.
stages: 
    # The 'build' stage will compile the project.
    - build 
    - docker
    # The 'test' stage will run tests after the build has been successfully completed.
    - test
    - sonar

# Job to handle the build process.
build:
  # Specifies that this job is part of the 'build' stage.
  stage: build 
  # The commands to execute as part of the build process.
  script: 
  # Change directory into the 'Vinylo-Individual' folder where the project is located.
  - cd Vinylo-Individual
  # Grant execution permissions to the Gradle wrapper script 'gradlew'.
  # This ensures that the script can be executed by the pipeline.
  - chmod +x gradlew
  # Execute the Gradle 'assemble' task, which compiles the code and prepares it for testing.
  - ./gradlew assemble

  artifacts:
    paths:
    - Vinylo-Individual/build/libs/
    expire_in: 1 hour

# Runs docker in docker
docker-build:
  stage: docker
  image: docker:cli
  dependencies:
    - build
  services:
    - name: docker:dind
      alias: thedockerhost

  variables:
    # Tell docker CLI how to talk to Docker daemon; see
    # https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-docker-in-docker-executor
    DOCKER_HOST: tcp://thedockerhost:2375/
    # Use the overlayfs driver for improved performance:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  script:
  # Change directory into the 'Vinylo-Individual' folder where the project is located.
  - cd Vinylo-Individual
  - docker build -t vinylo-individual .

# Job to handle the testing process.
test: 
  # Specifies that this job is part of the 'test' stage.
  stage: test 
  # The commands to execute as part of the testing process.
  script:
  # Change directory into the 'Vinylo-Individual' folder where the project is located.
  - cd Vinylo-Individual
  # Again, ensure that the Gradle wrapper script has execution permissions.
  - chmod +x gradlew 
  # Execute the Gradle 'test' task, which runs all unit and integration tests.
  - ./gradlew test -Dspring.profiles.active=test

# Sonar scan job.
sonar:
  stage: sonar
  script:
    - cd Vinylo-Individual
    - chmod +x gradlew
    - ./gradlew sonar
  allow_failure: true