plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id "org.sonarqube" version "5.1.0.4882"
    id 'org.flywaydb.flyway' version '8.0.0'
    id "jacoco"
}

group = 'S3.Individual'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'com.h2database:h2'  // H2 dependency for the in-memory database
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'org.flywaydb:flyway-core' 
    implementation 'org.flywaydb:flyway-mysql'
    implementation 'mysql:mysql-connector-java:8.0.33'
    
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.4.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.h2database:h2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'

}

flyway {
    url = 'jdbc:mysql://localhost:3306/mysql-db-vinylo'
    user = 'root'
    password = 'vinylo1234'
    locations = ['classpath:db/migration']
}


jacocoTestReport{
    dependsOn test
    reports {
        xml.required = true
    }
}

sonar {
  properties {
    property "sonar.projectKey", "vinylo_vinylo"
    property "sonar.host.url", "https://sonarcloud.io"
    property "sonar.organization", "vinylo"
    property "sonar.java.binaries", "src/main/java/s3/individual/vinylo"
  }
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.sonar.dependsOn(jacocoTestReport)