package s3.individual.vinylo.domain.mappers;

import org.springframework.stereotype.Component;

import s3.individual.vinylo.domain.Vinyl;
import s3.individual.vinylo.exceptions.CustomNotFoundException;
import s3.individual.vinylo.persistence.entity.ArtistEntity;
import s3.individual.vinylo.persistence.entity.VinylEntity;
import s3.individual.vinylo.persistence.jparepository.ArtistJPARepo;
import s3.individual.vinylo.persistence.jparepository.VinylJPARepo;

@Component // Make this class a Spring-managed bean
public class VinylEntityMapper {

    private static ArtistJPARepo artistJPARepo;

    public VinylEntityMapper(ArtistJPARepo artistJPARepo) {
        VinylEntityMapper.artistJPARepo = artistJPARepo;
    }

    // private VinylEntityMapper() {
    // throw new UnsupportedOperationException("Utility class");
    // }

    // Converts Vinyl domain object to VinylEntity
    public static VinylEntity toEntity(Vinyl vinyl, VinylJPARepo vinylJPARepo) {
        if (vinyl == null) {
            return null;
        }

        VinylEntity vinylEntity = new VinylEntity();
        // Do not set ID, as it's auto-generated by the database
        vinylEntity.setTitle(vinyl.getTitle());
        vinylEntity.setDescription(vinyl.getDescription());
        vinylEntity.setIsReleased(vinyl.getisReleased());
        vinylEntity.setVinylType(vinyl.getvinylType());

        // Handling the artist entity correctly
        if (vinyl.getArtist() != null && vinyl.getArtist().getId() != null) { // Adjust if getId() is an Integer
            ArtistEntity artistEntity = artistJPARepo.findById(vinyl.getArtist().getId()).orElseThrow(
                    () -> new CustomNotFoundException("ArtistEntity not found in VinylMapper"));
            vinylEntity.setArtist(artistEntity);
        }

        return vinylEntity;
    }

    // Converts VinylEntity to Vinyl domain object
    public static Vinyl fromEntity(VinylEntity entity) {
        if (entity == null) {
            return null;
        }

        Vinyl vinyl = new Vinyl();
        vinyl.setId(entity.getId()); // Retrieve the auto-generated ID from the entity
        vinyl.setTitle(entity.getTitle());
        vinyl.setDescription(entity.getDescription());
        vinyl.setIsReleased(entity.getIsReleased());
        vinyl.setVinylType(entity.getVinylType());
        vinyl.setArtist(ArtistEntityMapper.fromEntity(entity.getArtist()));

        return vinyl;
    }
}
